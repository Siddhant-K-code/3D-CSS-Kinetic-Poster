console.clear();

gsap.registerPlugin(SplitText);

select = e => document.querySelector(e);

let fontSize = gsap.getProperty(':root', '--fontSize');
let txt = select('.txt');
let wheel = select('.wheel');
let poster = select('.poster');
let numLines = 20;
let radius = (fontSize/(numLines/2))/Math.sin((180/numLines)*(Math.PI/180)); 
let angle = 360/numLines;
let origin = `0% 50% -${radius*2}px`;
let master = gsap.timeline();


function cloneTxt() {
	for (i=0; i<numLines-1; i++) {
		var clone = txt.cloneNode(true);
		wheel.appendChild(clone);
	}
}

function positionTxt() {
	gsap.set(wheel, {
		rotation: -90,
		rotationX: 0,
		rotationY: 0
	});
	gsap.set('.txt', {
		rotationX: function(index) {
			return angle*index;
		},
		z: radius*2,
		transformOrigin: origin
	});
	gsap.set('.char', {
		rotateX: -90,
		transformOrigin: "50% 50%"
	});
}

function animateIn() {
	let tl = gsap.timeline({delay: 0});
		tl.from('.char', {
			scale: 0.01,
			y: 440,
			duration: 8,
			rotation: 90,
			ease: 'power4.inOut'
		}, 0)
		.from('.txt', {
			rotationX: -180,
			duration: 12,
			ease: 'power4'
		}, 0)
		.from('.txt', {
			x: 100,
			duration: 8,
			ease: 'power4',
			stagger: 0.2
		}, 0)
		.from(wheel, {
			rotationY: 180,
			z: -2000,
			ease: 'expo',
			duration: 12
		}, 0)
		.from('.titleChar', {
			y: 'random(-20 20)',
			opacity: 0,
			duration: 4,
			stagger: {
				each: 0.05,
				from: "center"
			},
			ease: "expo",
		}, 1)
		.from('.desc', {
			y: 30,
			opacity: 0,
			duration: 4,
			ease: "power4"
		}, 1.5)
	
	return tl;
}

function rotate() {
	let tl = gsap.timeline();
	tl.to(wheel, {
		rotationX: 360,
		transformOrigin: "50% 50%",
		repeat: -1,
		ease: 'none',
		duration: 12
	});
	
	return tl;
}

function resize() {
	let vh = window.innerHeight;
	let sh = poster.offsetHeight;
	let scaleFactor = vh/sh;
	if(scaleFactor<1) {
		gsap.set(poster, { scale: scaleFactor });
	}
    else {
        gsap.set(poster, { scale: 1 });
    }
}

function init() {
	let linearText = new SplitText(txt, {type:"chars", charsClass:"char", position: "relative" }); 
	let titleText = new SplitText('.title', {type:"chars", charsClass:"titleChar", position: "relative" }); 
	gsap.set(poster, { autoAlpha: 1 });
	cloneTxt();
	positionTxt();
	master.add(animateIn())
		  .add(rotate(), 0);
	poster.onclick = () => {
		master.restart();
    }
	resize();
}

function calcOffset(xPos, yPos) {
	let winW = window.innerWidth;
	let winH = window.innerHeight;
	let dX = 2*(xPos - winW/2)/winW;
	let dY = -2*(yPos - winH/2)/winH;
	return [dX,dY];
}

function rotateTxt(xPos, yPos) {
	let nPos = calcOffset(xPos, yPos); // get cursor position from center 1-0-1
	let nX = nPos[0];
	let nY = nPos[1];
	let invertedRangeX = 1-Math.sqrt(nX*nX); // 0-1-0
	let invertedRangeY = 1-Math.sqrt(nY*nY); // 0-1-0
	gsap.to('.stage', {
		rotationX: nPos[1]*5,
		rotationY: nX*5,
		// rotation: nX*40,
		duration: 1,
		ease: 'sine'
	});
}

var pointer = { 
	x: window.innerWidth  / 2, 
	y: window.innerHeight / 2 
};

window.addEventListener("mousemove", function(event) {
	pointer.x = event.clientX;
	pointer.y = event.clientY;
	rotateTxt(pointer.x, pointer.y);
});

window.onresize = resize;

window.onload = () => {
	init();
};
